
@define _bin($value = undef)
    object('App::GPAudio::Model::Bin', {
        construct value $value;
    });

$schema = object('App::GPAudio::Schema', {
    constructor 'connect';
    construct [
        'dbi:SQLite:dbname=test.db',
    ];
});

$sens_source = _bin();
$sens_item = _bin();
$sens = object('App::GPAudio::Model::Sensitivity', {
    construct {
        source_sensitivity $sens_source;
        item_sensitivity $sens_item;
    };
});

$sources = object('App::GPAudio::Model::Sources', {
    construct {
        schema $schema;
    };
    call [
        ['set_sort_column_id', 0, 'ascending'];
    ];
});

$library = object('App::GPAudio::Model::Library', {
    construct {
        schema $schema;
    };
    call [
        ['set_sort_column_id', library_column('sort_artist'), 'ascending'];
    ];
});

$library_filter = object('Gtk2::TreeModelFilter', {
    construct [$library];
});

$library_filter_sort = object('Gtk2::TreeModelSort', {
    construct [$library_filter];
});

$playlists = object('App::GPAudio::Model::PlaylistManager', {
    construct {
        schema $schema;
    };
});

$player = object('App::GPAudio::Model::Player', {
});

$list = _bin();
$playing = _bin();

playing_item $playing;
player $player;
schema $schema;
active_playlist $list;
source_sensitivity $sens_source;
item_sensitivity $sens_item;
sensitivity $sens;
manager_size_group object('Gtk2::SizeGroup', ['vertical']);
sources $sources;
library $library;
library_filter $library_filter;
library_filter_sort $library_filter_sort;
playlists $playlists;
