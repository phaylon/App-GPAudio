@load '_helpers.conf';
singleton true;

@define _button($id, $tooltip, $action)
    enable_button_images(widget('Gtk2::Button', {
        connect clicked action($action);
        construct [];
        set relief 'none';
        set can_focus false;
        set image stock_icon($id, 'button');
        set tooltip_text $tooltip;
    }));

@define _column(
    $title, $column, $align, $xalign,
    $sort_column = undef,
    $expand //= false,
    $ellip //= 'end',
) widget('Gtk2::TreeViewColumn', {
    $cell = widget('Gtk2::CellRendererText', {
        set ellipsize $ellip;
        set alignment $align;
        set xpad 5;
        set xalign $xalign;
        set foreground_set true;
    });
    $sort_column //= "sort_${column}";
    set title $title;
    set resizable true;
    set expand $expand;
    set alignment 0.5;
    call [
        ['pack_start', $cell, true];
        ['add_attribute', $cell,
            'text', playlist_column($column)];
        ['add_attribute', $cell,
            'weight', playlist_column('font_weight')];
        ['add_attribute', $cell,
            'foreground', playlist_column('failed')];
    ];
});

$sens_model = model('active_playlist');

$entry_search = widget('Gtk2::Entry', {
    call [
        ['set_icon_from_stock', 'primary', 'gtk-find'];
    ];
});

$col_artist = _column(
    'Artist', 'artist', 'left', 0,
    undef, true,
);
$col_title = _column(
    'Title', 'title', 'left', 0,
    undef, true,
);
$col_album = _column(
    'Album', 'album', 'left', 0,
    undef, true,
);
$col_year = _column(
    'Year', 'year', 'right', 1,
    undef, undef, 'none',
);
$col_length = _column(
    'Length', 'length_readable', 'right', 1,
    'sort_length', undef, 'none',
);

$playlist = widget('App::GPAudio::Widget::TreeViewActive', {
    connect button_press_event action('/item_select/click');
    connect button_release_event action('/item_select/click_end');
    connect drag_data_received action('/lists/drag_received');
    connect drag_data_get action('/lists/drag_get');
    connect row_activated action('/play/activate');
    connect key_press_event action('/lists/key_press');
    construct {
        active_model model('active_playlist');
    };
    set headers_visible true;
    set enable_search true;
    set search_column playlist_column('title');
    set rules_hint true;
    #set tooltip_column playlist_column('path');
    call [
        ['append_column', $col_artist];
        ['append_column', $col_title];
        ['append_column', $col_album];
        ['append_column', $col_year];
        ['append_column', $col_length];
        ['enable_model_drag_dest', ['default'],
            ['GPAudio.file', ['same-app'], 1]];
        ['enable_model_drag_source', ['button1-mask'], ['default', 'move'],
            ['GPAudio.file', ['same-app'], 1]];
    ];
});

$select_playlist = widget('Gtk2::ComboBox', {
    connect changed action('/lists/select');
    construct [model('playlists')];
    set width_request 120;
    $cell = widget('Gtk2::CellRendererText', {
        set ellipsize 'end';
    });
    call [
        ['pack_start', $cell, true];
        ['add_attribute', $cell, 'text', 1],
    ];
});

$label_summary = widget('Gtk2::Label', {
    construct [''];
    set xpad 10;
});

$manager_bar = HBox([
    ['pack_end', $label_summary, false, true, 0];
 #   ['pack_end', $entry_search, false, true, 0];
    ['pack_start', widget('Gtk2::Label', {
        construct ['Playlist'];
        set xpad 5;
    }), false, true, 0];
    ['pack_start', $select_playlist, false, true, 0];
]);

$selection = call($playlist, 'get_selection');
@do connect($selection, 'changed', action('/item_select/select'));
@do call($selection, 'set_mode', 'extended');
@do call($selection,
    'set_select_function',
    action('/item_select/allow_select'),
);

label_summary $label_summary;
selection $select_playlist;
tree_view $playlist;

column_artist $col_artist;
column_title $col_title;
column_album $col_album;
column_year $col_year;
column_length $col_length;

root widget('Gtk2::VBox', {
    construct [false, 0];
    call [
        ['pack_start', SBox($sens_model, Scrolled($playlist)), true, true, 0];
        ['pack_start', $manager_bar, false, true, 0];
    ];
});

@do call(model('manager_size_group'), 'add_widget', $manager_bar);
