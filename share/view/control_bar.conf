@load '_helpers.conf';
singleton true;

@define _button($id, $tooltip, $action)
    enable_button_images(widget('Gtk2::Button', {
        connect clicked action("/play/${action}");
        construct [];
        set relief 'none';
        set can_focus false;
        set image theme_icon($id, 22);
        set tooltip_text $tooltip;
    }));

@define _toggle($id, $tooltip)
    enable_button_images(widget('Gtk2::ToggleButton', {
        construct [];
        set relief 'none';
        set can_focus false;
        set image theme_icon($id, 22);
        set tooltip_text $tooltip;
    }));

$button_play = _button('media-playback-start', 'Play', 'play');
$button_pause = _button('media-playback-pause', 'Pause', 'pause');
$button_stop = _button('media-playback-stop', 'Stop', 'stop');
$button_next = _button('stock_media-next', 'Next Track', 'next');

$button_shuffle = _toggle('media-playlist-shuffle', 'Shuffle');

$label_pos = widget('Gtk2::Label', {
    construct ['12:34'];
    set width_chars 10;
});

$label_full = widget('Gtk2::Label', {
    construct ['23:45'];
    set width_chars 10;
});

$volume = widget('Gtk2::VolumeButton', {
    set can_focus false;
});

$scale_pos = widget('Gtk2::HScale', {
    set draw_value false;
    set can_focus false;
});

$pos_adjust = call($scale_pos, 'get_adjustment');
@do call($pos_adjust, 'set_lower', 0);
@do call($pos_adjust, 'set_upper', 100);

$player = model('player');

$sens_playing = call($player, 'get_state_model', 'playing');
$sens_in_stream = call($player, 'get_state_model', ['playing', 'paused']);
$sens_not_playing = call($player, 'get_state_model', 'playing', 1);
$sens_file = model('playing_item');

$box_state = HBox([
    ['pack_start',
        SBox($sens_not_playing, $button_play, 'visible'), false, true, 0];
    ['pack_start',
        SBox($sens_playing, $button_pause, 'visible'), false, true, 0];
    ['pack_start',
        SBox($sens_file, $button_stop), false, true, 0];
], 0, 5);

$box_nav = HBox([
    ['pack_start', SBox($sens_file, $button_next), false, true, 0];
    ['pack_start', $button_shuffle, false, true, 0];
], 0, 5);

$box_pos = HBox([
    ['pack_start', $label_pos, false, true, 0];
    ['pack_start', SBox($sens_in_stream, $scale_pos), true, true, 0];
    ['pack_start', $label_full, false, true, 0];
], 0, 5);

$box_volume = HBox([
    ['pack_start', $volume, false, true, 0];
], 0, 5);

$box = HBox([
    ['pack_start', $box_state, false, true, 0];
    ['pack_start', VSeparator(), false, true, 0];
    ['pack_start', $box_nav, false, true, 0];
    ['pack_start', VSeparator(), false, true, 0];
    ['pack_start', $box_pos, true, true, 0];
    ['pack_start', VSeparator(), false, true, 0];
    ['pack_start', $box_volume, false, true, 0];
], 5);

shuffle $button_shuffle;
root $box;
